---
import { Image } from "astro:assets";
import { type CollectionEntry, getEntry, getEntries } from "astro:content";
import TechnologyBadge from "./TechnologyBadge.astro";
import GitHubBadge from "./GitHubBadge.astro";
import ExternalLinkIcon from "./ExternalLinkIcon.astro";

type Props = {
  project: CollectionEntry<"projects">;
};

const { project } = Astro.props;
const { data: app } = await getEntry("apps", project.data.app.id);
const technologies = project.data.technologies
  ? await getEntries(project.data.technologies)
  : [];
---

<div class="rounded-2xl border border-border bg-primary-foreground p-4">
  <div class="flex flex-col gap-4">
    <div class="flex flex-row items-center gap-4">
      <Image
        class="size-20 touch-manipulation rounded-xl"
        src={app.logo}
        alt={app.name}
      />
      <div class="flex flex-col">
        <div class="flex flex-row gap-1.5">
          <p class="font-semibold">{app.name}</p>
          <div class="mt-[1px]">
            <ExternalLinkIcon url={app.deploymentUrl ?? app.githubUrl} />
          </div>
        </div>
        <div class="w-fit"><GitHubBadge url={app.githubUrl} /></div>
        <p class="mt-1.5 text-sm text-muted-foreground">{app.type}</p>
      </div>
    </div>
    <p class="text-sm text-muted-foreground">
      {project.body}
    </p>
    {
      technologies.length > 0 && (
        <div class="flex flex-row flex-wrap gap-2">
          {technologies.map((technology) => (
            <TechnologyBadge technology={technology} />
          ))}
        </div>
      )
    }
  </div>
</div>
